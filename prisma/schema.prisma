generator client {
   provider        = "prisma-client-js"
   previewFeatures = ["typedSql"]
}

datasource db {
   provider = "postgresql"
   url      = env("POSTGRES_URI")
}

model User {
   id              Int      @id @default(autoincrement())
   email           String   @unique
   password        String
   username        String   @unique
   avatar          String?  @db.Uuid
   isEmailVerified Boolean  @default(false) @map("is_email_verified")
   createdAt       DateTime @default(now()) @map("created_at")
   updatedAt       DateTime @updatedAt @map("updated_at")

   tokens Token[]
   data   Data[]

   @@map("users")
}

model Token {
   id        Int       @id @default(autoincrement())
   user      User      @relation(fields: [userID], references: [id], onDelete: Cascade)
   userID    Int       @map("user_id")
   expires   DateTime
   type      TokenType
   token     String    @unique
   createdAt DateTime  @default(now()) @map("created_at")

   @@map("tokens")
}

model Data {
   id            String   @id @default(uuid()) @db.Uuid
   ttl           Int      @default(-1)
   owner         User?    @relation(fields: [ownerID], references: [id], onDelete: Cascade)
   ownerID       Int?     @map("owner_id")
   isOwnerHidden Boolean  @default(false) @map("owner_hidden")
   title         String?  @db.VarChar(100)
   description   String?  @db.VarChar(500)
   password      String?
   createdAt     DateTime @default(now()) @map("created_at")
   updatedAt     DateTime @updatedAt @map("updated_at")

   @@map("data")
}

enum TokenType {
   EMAIL_VERIFICATION
   PASSWORD_RESET

   @@map("token_types")
}
